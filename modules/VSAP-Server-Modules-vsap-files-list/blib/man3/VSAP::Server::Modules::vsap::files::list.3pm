.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VSAP::Server::Modules::vsap::files::list 3"
.TH VSAP::Server::Modules::vsap::files::list 3 "2014-06-27" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VSAP::Server::Modules::vsap::files::list \- VSAP module to list files
in a directory
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use VSAP::Server::Modules::vsap::files::list;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1VSAP\s0 files::list module allows users to list files in a directory.
.PP
To list files, you need to specify a path name and an optional user
name.  The following example generically represents the structure of a
typical list files request:
.PP
.Vb 4
\&  <vsap type="files:list">
\&    <path>path name</path>
\&    <user>user name</user>
\&  </vsap>
.Ve
.PP
System Administrators should use the full path name of a file and need
not ever include the optional user name in a file mode query.  Domain
Administrators should use the \*(L"virtual path name\*(R" of a file, i.e. the
path name without prepending the home directory where the file resides.
If the file is homed in a one of the Domain Administrator's End Users'
file spaces, then the optional '<user>' node should be used.  End Users
will also need to use a \*(L"virtual path name\*(R" to a file; no '<user>'
specification is required, as the authenticated user name is presumed.
.PP
Consider the following examples:
.Sp
.RS 2
A request made by System Administrator to list files in a system folder:
.Sp
.Vb 3
\&    <vsap type="files:list">
\&      <path>/var/log</path>
\&    </vsap>
.Ve
.Sp
A request made by a Domain Administrator or End User to list files homed
in their own home directory structure.
.Sp
.Vb 3
\&    <vsap type="files:list">
\&      <path>/mystuff/photos</path>
\&    </vsap>
.Ve
.Sp
A request made by a Domain Administrator to list files homed in the
directory space of an End User.
.Sp
.Vb 4
\&    <vsap type="files:list">
\&      <user>scott</user>
\&      <path>/poetry/tabasco</path>
\&   </vsap>
.Ve
.RE
.PP
If the path name is accessible (see \s-1NOTES\s0), the properties of the
directory will be listed as well as the properties of each file that is
located in that directory (please see the example below).
.PP
.Vb 10
\&  <vsap type="files:list">
\&    <user>user name</user>
\&    <path>path name</path>
\&    <owner>directory owner user name</owner>
\&    <group>directory owner group name</group>
\&    <size>directory size (in bytes)</size>
\&    <is_writable>0|1</is_writable>
\&    <is_executable>0|1</is_executable>
\&    <mtime>
\&      <sec>0\-59</sec>
\&      <min>0\-59</min>
\&      <hour>0\-23</hour>
\&      <mday>1\-31</mday>
\&      <month>1\-12</month>
\&      <year>4\-digit year</year>
\&      <epoch>long integer value</epoch>
\&    </mtime>
\&    <date>
\&      <year>4\-digit year</year>
\&      <month>1\-12</month>
\&      <day>1\-31</day>
\&      <hour>1\-12</hour>
\&      <hour12>1\-23</hour12>
\&      <minute>1\-59</minute>
\&      <second>1\-59</second>
\&      <o_year>4\-digit year</o_year>
\&      <o_month>1\-12</o_month>
\&      <o_day>1\-31</o_day>
\&      <o_hour>1\-12</o_hour>
\&      <o_hour12>1\-23</o_hour12>
\&      <o_minute>1\-59</o_minute>
\&      <o_second>1\-59</o_second>
\&      <o_offset>time zone offset</o_offset>
\&    </date>
\&    <mode>
\&      <owner>
\&        <read>0|1</read>
\&        <write>0|1</write>
\&        <execute>0|1</execute>
\&        <setuid>0|1</setuid>
\&      </owner>
\&      <group>
\&        <read>0|1</read>
\&        <write>0|1</write>
\&        <execute>0|1</execute>
\&        <setgid>0|1</setgid>
\&      </group>
\&      <world>
\&        <read>0|1</read>
\&        <write>0|1</write>
\&        <execute>0|1</execute>
\&        <sticky>0|1</sticky>
\&      </world>
\&    </mode>
\&    <octal_mode>octal number between 0000\-7777</octal_mode>
\&    <symbolic_mode>rwxrwxrwx</symbolic_mode>
\&    <parent_dir>path name</parent_dir>
\&    <file>
\&      <name>file name</name>
\&      <type>file type</type>
\&      <owner>file owner user name</owner>
\&      <group>file owner group name</group>
\&      <size>file size (in bytes)</size>
\&      <is_writable>0|1</is_writable>
\&      <is_executable>0|1</is_executable>
\&      <mtime>
\&        <sec>0\-59</sec>
\&        <min>0\-59</min>
\&        <hour>0\-23</hour>
\&        <mday>1\-31</mday>
\&        <month>1\-12</month>
\&        <year>4\-digit year</year>
\&        <epoch>long integer value</epoch>
\&      </mtime>
\&      <date>
\&        <year>4\-digit year</year>
\&        <month>1\-12</month>
\&        <day>1\-31</day>
\&        <hour>1\-12</hour>
\&        <hour12>1\-23</hour12>
\&        <minute>1\-59</minute>
\&        <second>1\-59</second>
\&        <o_year>4\-digit year</o_year>
\&        <o_month>1\-12</o_month>
\&        <o_day>1\-31</o_day>
\&        <o_hour>1\-12</o_hour>
\&        <o_hour12>1\-23</o_hour12>
\&        <o_minute>1\-59</o_minute>
\&        <o_second>1\-59</o_second>
\&        <o_offset>time zone offset</o_offset>
\&      </date>
\&      <mode>
\&        <owner>
\&          <read>0|1</read>
\&          <write>0|1</write>
\&          <execute>0|1</execute>
\&          <setuid>0|1</setuid>
\&        </owner>
\&        <group>
\&          <read>0|1</read>
\&          <write>0|1</write>
\&          <execute>0|1</execute>
\&          <setgid>0|1</setgid>
\&        </group>
\&        <world>
\&          <read>0|1</read>
\&          <write>0|1</write>
\&          <execute>0|1</execute>
\&          <sticky>0|1</sticky>
\&        </world>
\&      </mode>
\&      <octal_mode>octal number between 0000\-7777</octal_mode>
\&      <symbolic_mode>rwxrwxrwx</symbolic_mode>
\&    </file>
\&    <file>
\&      <name>file name</name>
\&      <type>file type</type>
\&       .
\&       .
\&       .
\&    </file>
\&    <file>
\&       .
\&       .
\&       .
\&    </file>
\&  </vsap>
.Ve
.PP
The directory path name and directory user name properties will mirror
that which was supplied by the query.  The directory ownership vector,
user and group, is noted in the '<owner>' and '<group>' nodes
respectively.  The directory size is simply the size of the directory 
itself (\fBnot\fR the sum of the sizes of all files in the directory).
The '<is_writable>' node will be set to \*(L"yes\*(R" or \*(L"no\*(R" depending on 
whether the authenticated user has write privileges to the directory;
likewaise, the '<is_executable>' node will be set to \*(L"yes\*(R" or \*(L"no\*(R" 
depending on whether the authenticaed user has execute privileges for
the directory.
.PP
The '<mtime>' node is populated with the year, month, day of the 
month (mday), hour, min, and second that the directory was last 
modified.  The last modification time is also included as the number 
of seconds elapsed since the Epoch (in the appropriately named
\&'<epoch>' node).
.PP
The '<date>' node also represents the file last modification date but 
in the timezone of the user's preference.  The original unmodified
time parameters are also included (and should be identical to their
<mtime> counterparts).
.PP
The '<mode>' node is the file mode representation split into '<owner>', 
\&'<group>', and '<world>' bits.  Each '<owner>', '<group>', and '<world>'
subnode will have a '<read>', '<write>', and '<execute>' child that 
can be either 0 or 1.  The '<owner>' subnode also will include a 
\&'<setuid>' child which will indicate whether or not the directory is
setuid.  Likewise, the '<group>' subnode also will include a '<setgid>'
child which will indicate whether or not the directory is setgid.  And
furthermore, the '<world>' subnode will include a '<sticky>' child set
if the sticky bit on the directory is set.
.PP
The '<octal_node>' is the string based representation of the octal mode 
of the directory (\*(L"0775\*(R", \*(L"0755\*(R", \*(L"0700\*(R", etc).  The '<symbolic_node>'
is a string based representation of the file mode in the \*(L"rwx\*(R" fashion
(e.g. \*(L"rwxrwxr-x\*(R", \*(L"rwxr-xr-x\*(R", etc).
.PP
The '<parent_dir>' node contains the full path to the parent directory
of the directory made in the query.
.PP
A description of each file is also included in the directory listing.
Each file description includes most of the nodes included above 
('<owner>', '<group>', '<is_writable>', '<is_executable>', '<mtime>',
\&'<date>', '<mode>', '<octal_node>', and '<symbolic_node>').  Each 
file node will also include a '<type>' child.  The values for the type
child can be one of: \*(L"socket\*(R" : \*(L"named pipe (\s-1FIFO\s0)\*(R", \*(L"tty\*(R", \*(L"block 
special file\*(R", \*(L"character special file\*(R", \*(L"dirlink\*(R", \*(L"symlink\*(R", \*(L"dir\*(R",
\&\*(L"text\*(R", \*(L"binary\*(R", or \*(L"plain\*(R".
.PP
If the path name was not found or if the path name is not accessible, an
error will be returned.
.SH "NOTES"
.IX Header "NOTES"
File Accessibility.  System Administrators are allowed full access to
the file system, therefore the validity of the path name is only
determined whether it exists or not.  However, End Users are restricted
access (or 'jailed') to their own home directory tree.  Domain
Administrators are likewise restricted, but to the home directory trees
of themselves and their end users.  Any attempts to get information
about or modify properties of files that are located outside of these
valid directories will be denied and an error will be returned.
.SH "AUTHOR"
.IX Header "AUTHOR"
Rus Berrett, <rus@surfutah.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006 by \s-1MYNAMESERVER\s0, \s-1LLC\s0
.PP
No part of this module may be duplicated in any form without written
consent of the copyright holder.
