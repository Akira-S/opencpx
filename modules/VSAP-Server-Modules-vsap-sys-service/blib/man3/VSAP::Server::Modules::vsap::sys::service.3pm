.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VSAP::Server::Modules::vsap::sys::service 3"
.TH VSAP::Server::Modules::vsap::sys::service 3 "2014-06-27" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VSAP::Server::Modules::vsap::sys::service \- VSAP module supporting the control of certain services.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "sys:service:stop, sys:service:start, sys:service:restart, sys:service:enable, sys:service:disable"
.IX Subsection "sys:service:stop, sys:service:start, sys:service:restart, sys:service:enable, sys:service:disable"
All of these methods use the same format for both the request and response. Simply replace \f(CW$action\fR
in the below example with either stop, start, restart, enable or disable.
.PP
.Vb 5
\&    <vsap type=\*(Aqsys:service:$action\*(Aq>
\&        <service1/>
\&        <service2/>
\&        <service3/>
\&    </vsap>
.Ve
.PP
Would return
.PP
.Vb 5
\&    <vsap type=\*(Aqsys:service:$action\*(Aq>
\&        <service1/>
\&        <service2/>
\&        <service3 error="some error occured while" />
\&    </vsap>
.Ve
.SS "sys:service:status"
.IX Subsection "sys:service:status"
.Vb 1
\&    <vsap type=\*(Aqsys:service:status\*(Aq/>
.Ve
.PP
Would return:
.PP
.Vb 10
\&    <vsap type=\*(Aqsys:service:status\*(Aq>
\&        <service1>
\&            <running>true</running>
\&            <enabled>true</enabled>
\&        </service1>
\&        <service2/>
\&            <running>true</running>
\&            <enabled>true</enabled>
\&        </service2>
\&        <service3/>
\&            <running>true</running>
\&            <enabled>true</enabled>
\&        </service3>
\&        <service4 error="Error x occured while obtaining status"/>
\&    </vsap>
.Ve
.PP
For the status request, you can also just specify one service and the status will be returned.
.PP
Ex:
.PP
.Vb 3
\&    <vsap type=\*(Aqsys:service:status\*(Aq>
\&        <service1/>
\&    </vsap>
.Ve
.PP
Would return:
.PP
.Vb 6
\&    <vsap type=\*(Aqsys:service:status\*(Aq>
\&        <service1>
\&            <running>true</running>
\&            <enabled>true</enabled>
\&        </service1>
\&    </vsap>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This vsap module provides control of services on the machine. It provides the ability to
stop, start, restart, enable or disable the services. It also provides methods to enable
or disable the service on the machine. An enabled service starts up automatically when the
machine is booted. A service can be started or stopped indepdent of it being enabled or
disabled. Most of the functionality of this module is taken care of in the another module
called VSAP::Server::Sys::Service::Control. Please refer to this module for additional
information.
.PP
The services which are listed and available for control depends on the available services as
obtained by the VSAP::Server::Sys::Service::Control module. A service is determined avaiable
(and will be returned by the status) method typically if its startup script exists. See the
VSAP::Server::Sys::Service::Control and other related modules for more information.
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
None by default.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
VSAP::Server::Sys::Service::Control
.SH "AUTHOR"
.IX Header "AUTHOR"
James Russo
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006 by \s-1MYNAMESERVER\s0, \s-1LLC\s0
.PP
No part of this module may be duplicated in any form without written
consent of the copyright holder.
