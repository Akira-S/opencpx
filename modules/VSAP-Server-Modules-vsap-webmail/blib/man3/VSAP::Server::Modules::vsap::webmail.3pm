.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VSAP::Server::Modules::vsap::webmail 3"
.TH VSAP::Server::Modules::vsap::webmail 3 "2014-11-13" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VSAP::Server::Modules::vsap::webmail \- Wrapper for Mail::Cclient
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use VSAP::Server::Modules::vsap::webmail;
\&  blah blah blah
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.ie n .SS "new( $username, $password [ \s-1PARAM\s0, ... ] )"
.el .SS "new( \f(CW$username\fP, \f(CW$password\fP [ \s-1PARAM\s0, ... ] )"
.IX Subsection "new( $username, $password [ PARAM, ... ] )"
Opens \s-1INBOX\s0 and returns a webmail object.
.PP
Other parameters will be passed to Mail::Cclient (e.g., 'readonly').
Two are passed by default: 'shortcache' and 'debug'. \s-1NOTE:\s0
\&'shortcache' was removed for Signature (core dumping imapd) but may
be replaced if imapd is upgraded.
.PP
Package variables \f(CW$HOST\fR and \f(CW$PATH\fR are set to '{localhost}' and
\&'~/Mail/' respectively.
.SS "log"
.IX Subsection "log"
returns the last error (as a string) produced by Mail::Cclient; status
messages also here during normal operation.
.SS "folder_open($folder)"
.IX Subsection "folder_open($folder)"
opens Mail::Cclient stream on \f(CW$folder\fR; returns Mail::Cclient::open
.SS "\fIfolder_list()\fP"
.IX Subsection "folder_list()"
returns hashref of folder names
.SS "folder_status($folder)"
.IX Subsection "folder_status($folder)"
returns hashref of status of currently open folder
.SS "folder_create($folder)"
.IX Subsection "folder_create($folder)"
creates a new folder in \f(CW$PATH\fR; returns Mail::Cclient::create
.ie n .SS "folder_rename($folder, $new_folder)"
.el .SS "folder_rename($folder, \f(CW$new_folder\fP)"
.IX Subsection "folder_rename($folder, $new_folder)"
renames \f(CW$folder\fR to \f(CW$new_folder\fR; returns Mail::Cclient::rename
.SS "folder_delete($folder)"
.IX Subsection "folder_delete($folder)"
deletes \f(CW$folder\fR from \f(CW$PATH\fR; returns Mail::Cclient::delete
.ie n .SS "messages_move($seq, $src, $dest)"
.el .SS "messages_move($seq, \f(CW$src\fP, \f(CW$dest\fP)"
.IX Subsection "messages_move($seq, $src, $dest)"
moves \f(CW$seq\fR messages from \f(CW$src\fR to \f(CW$dest\fR. \f(CW$seq\fR is a string list of UIDs
(e.g., \*(L"1,43,112\*(R").
.ie n .SS "messages_move_seq($seq, $src, $dest)"
.el .SS "messages_move_seq($seq, \f(CW$src\fP, \f(CW$dest\fP)"
.IX Subsection "messages_move_seq($seq, $src, $dest)"
Just like messages_move, except \f(CW$seq\fR is treated as a sequence of
message numbers instead of uids.
.SS "messages_sort([$folder [, field1 => order1 [, ...]]])"
.IX Subsection "messages_sort([$folder [, field1 => order1 [, ...]]])"
Sorts \f(CW$folder\fR (default \s-1INBOX\s0) on specified criteria (e.g., from => 1,
etc.) (default: date => 1). Returns a list reference.
.PP
Example:
.PP
.Vb 2
\&  ## sort Trash using default \*(Aq(date => 1)\*(Aq
\&  $msgs = $wm\->messages_sort(\*(AqTrash\*(Aq);
\&
\&  ## sort INBOX (default) using \*(Aq(from => 1)\*(Aq
\&  $msgs = $wm\->messages_sort(from => 1);
\&  
\&  ## sort INBOX (default) using \*(Aq(from_name => 1)\*(Aq
\&  $msgs = $wm\->messages_sort(from_name => 1);
.Ve
.ie n .SS "message([$folder,] $msgno, $header_only)"
.el .SS "message([$folder,] \f(CW$msgno\fP, \f(CW$header_only\fP)"
.IX Subsection "message([$folder,] $msgno, $header_only)"
Returns a hash reference containing the message contents. If
\&'$header_only' is a true value, only the message header will be
parsed.
.SS "messages_delete([$folder,] \s-1SEQUENCE\s0)"
.IX Subsection "messages_delete([$folder,] SEQUENCE)"
Deletes messages by sequence number
.PP
E.g., messages_delete($m, \*(L"1,3\*(R")
.SS "messages_msgno($m, \s-1SORT\s0 => [ subject => 0, ... ])"
.IX Subsection "messages_msgno($m, SORT => [ subject => 0, ... ])"
Returns a hash reference of sequence => msgno using the \s-1SORT\s0 criteria
provided.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIvsap::webmail::folders\fR\|(3), \fIvsap::webmail::messages\fR\|(3)
.SH "AUTHOR"
.IX Header "AUTHOR"
Scott Wiersdorf, <scott@perlcode.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006 by \s-1MYNAMESERVER\s0, \s-1LLC\s0
.PP
No part of this module may be duplicated in any form without written
consent of the copyright holder.
