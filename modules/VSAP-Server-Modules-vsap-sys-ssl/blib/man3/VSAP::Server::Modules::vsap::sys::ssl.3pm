.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VSAP::Server::Modules::vsap::sys::ssl 3"
.TH VSAP::Server::Modules::vsap::sys::ssl 3 "2014-11-08" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VSAP::Server::Modules::vsap::sys::ssl \- VSAP module to for SSL utilities
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use VSAP::Server::Modules::vsap::sys::ssl;
.SS "csr_create"
.IX Subsection "csr_create"
call:
 <vsap type=\*(L"sys:ssl:csr_create\*(R">
  <domain>foo.com</domain>
  <subject>/O=Foo Inc/CN=foo.com...</subject>
 </vsap>
.PP
response
 <vsap type=\*(L"sys:ssl:csr_create\*(R">
  <csr>\-\-\-\-\-BEGIN \s-1CERTIFICATE\s0 \s-1REQUEST\-\-\-\-\-\s0
\&\s-1WHOLE_LOTTA_BASE64_ENCODED_CSR_BYTES\s0
\&\-\-\-\-\-END \s-1CERTIFICATE\s0 REQUEST\-\-\-\-\-</csr>
  <url>http://foo.com/vhCZ4DkuiV.html</url>
  <status>ok</status>
 </vsap>
.SS "csr_delete"
.IX Subsection "csr_delete"
call:
 <vsap type=\*(L"sys:ssl:csr_delete\*(R">
  <domain>foo.com</domain>
 </vsap>
.PP
response
 <vsap type=\*(L"sys:ssl:csr_delete\*(R">
  <status>ok</status>
 </vsap>
.SS "cert_install"
.IX Subsection "cert_install"
call:
 <vsap type=\*(L"sys:ssl:cert_install\*(R">
  <domain>foo.com</domain>
  <cert>\-\-\-\-\-BEGIN \s-1CERTIFICATE\-\-\-\-\-\s0
\&\s-1WHOLE_LOTTA_BASE64_ENCODED_CERT_BYTES\s0
\&\-\-\-\-\-END CERTIFICATE\-\-\-\-\-</cert>
  <key>\-\-\-\-\-BEGIN \s-1PRIVATE\s0 \s-1KEY\-\-\-\-\-\s0
\&\s-1WHOLE_LOTTA_BASE64_ENCODED_KEY_BYTES\s0
\&\-\-\-\-\-END \s-1PRIVATE\s0 KEY\-\-\-\-\-</key>
  <self>yes</self>
  <cacert>\-\-\-\-\-BEGIN \s-1CERTIFICATE\-\-\-\-\-\s0
\&\s-1WHOLE_LOTTA_BASE64_ENCODED_CERT_BYTES\s0
\&\-\-\-\-\-END CERTIFICATE\-\-\-\-\-</cacert>
  <applyto_apache>yes</applyto_apache>
  <applyto_dovecot>yes</applyto_dovecot>
  <applyto_postfix>yes</applyto_postfix>
  <applyto_vsftpd>yes</applyto_vsftpd>
 </vsap>
.PP
response
 <vsap type=\*(L"sys:ssl:cert_install\*(R">
  <status>ok</status>
 </vsap>
.SS "cert_uninstall"
.IX Subsection "cert_uninstall"
call:
 <vsap type=\*(L"sys:ssl:cert_uninstall\*(R">
  <domain>foo.com</domain>
 </vsap>
.PP
response
 <vsap type=\*(L"sys:ssl:cert_uninstall\*(R">
  <status>ok</status>
 </vsap>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1VSAP\s0 ssl module is used to manage \s-1SSL\s0 certificates.
.PP
CSRs (certificate signing requests) are created with ssl:csr_create, and when
no longer needed may be removed with ssl:csr_remove.
.PP
The optional \*(L"subject\*(R" is a string to pass as openssl's \*(L"\-subj\*(R", and if not
supplied will default to \*(L"/CN=<domain>\*(R".  csr_create will pass back the
created \s-1CSR\s0 and the location of a validation \s-1URL\s0 (which also contains the
\&\s-1CSR\s0).
.PP
Actual certificates are installed with ssl:cert_install, and removed with
ssl_cert_uninstall.
.PP
The certificate may be passed in, or the <self> parameter may be passed
(non-empty) to indicate that a self-signed cert should be generated.  An
intermediate certificate may also be passed in <cacert>.  If a private key
wasn't already generated via the ssl:csr_create call, it should be passed in
along with the cert; this isn't necessary for self-signed certs, as a key
will be generated.
.PP
If the domain is the same as the hostname, the certificate will be installed
for all services by default.  Otherwise, only Apache will use the certificate,
and then only in the VirtualHost section corresponding to the domain (assuming
such a section exists).
.PP
The certificate can also be explicitly applied only to certain services, by
including the various <applyto_*> parameters.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jamie Gritton
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2012 by \s-1MYNAMESERVER\s0, \s-1LLC\s0
.PP
No part of this module may be duplicated in any form without written
consent of the copyright holder.
