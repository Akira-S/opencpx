.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VSAP::Server::Sys::Config::Inetd::Impl::FreeBSD::Inetd 3"
.TH VSAP::Server::Sys::Config::Inetd::Impl::FreeBSD::Inetd 3 "2014-06-27" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VSAP::Server::Sys::Config::Inetd \- An module which enables control and reporting of services in inetd.conf
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use VSAP::Server::Sys::Config::Inetd::Impl::FreeBSD::Inetd;
\&
\& $inetd = Config::Inetd\->new( searchorder => \*(Aqforward\*(Aq, conf => \*(Aq/etc/inetd.conf\*(Aq, readonly => 0);
\&
\& if ($inetd\->is_enabled( servicename => \*(Aqftp\*(Aq, protocol => qr/^tcp/)) {
\&    print "ftp is enabled.";
\& }
\&
\& # Disable the ftp
\& $inetd\->disable(\*(Aqftp\*(Aq);
\&
\& # Enable the ftp
\& $inetd\->enable(\*(Aqftp\*(Aq);
\&
\& $inetd\->searchorder(\*(Aqtopdown\*(Aq);
\&# or
\& $inetd\->searchorder(\*(Aqbottomup\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Config::Inetd is an interface to inetd's configuration file \fIinetd.conf\fR.
It simplifies enabling, disabling and checking on the current state of services.
It consistently handles the case where there are multiple entries in the inetd.conf
for the same service and protocol. The module always acts upon the first entry it
finds given the search criteria. The search criteria can be any field in the inetd.conf
file, and the search can take place from topdown or bottomup in the file. This enables
you to always enable the last (or first) entry in the file for a given service.
.SH "METHODS"
.IX Header "METHODS"
.SS "new"
.IX Subsection "new"
Constructor
.PP
.Vb 1
\& $inetd = VSAP::Server::Sys::Config::Inetd\->new( conf => \*(Aq/etc/inetd.conf\*(Aq, searchorder => \*(Aqforwards\*(Aq );
.Ve
.PP
The \fIconf\fR element defines where the inetd.conf file is located. If not included, the
default value of \fI/etc/inetd.conf\fR is used. The searchorder element defines in which
order the inetd.conf file is searched. The valid values are \fIbottomup\fR and \fItopdown\fR
with the default being \fIbottomup\fR. The readonly flag, if true opens the file in readonly
mode and performs a shared lock rather then exclusive lock on the file.
.SS "is_enabled"
.IX Subsection "is_enabled"
The is_enabled method returns undef if no entry was found, 0 if the entry was found but is
disabled (commented out).
.PP
The \fIis_enabled\fR, \fIis_disabled\fR, \fIenable\fR and \fIdisable\fR methods on the object requires a service
name. The mapping of service names to specific entires in the inetd.conf file is done by the \f(CW%SERVICEMAP\fR
variable. In the \f(CW%SERVICEMAP\fR file you can specify any of the following: \fIservicename\fR, \fIsocketype\fR,
\&\fIprotocol\fR, \fIwait\fR, \fIuser\fR, \fIprog\fR, \fIprogargs\fR. These keys directly map in the same order as the
fields in the inetd.conf file. The search takes place line by line in the order defined by the search
order parameter, either begining at the top or bottom of the file. The first line which matches the
\&\fB\s-1ALL\s0\fR search criteria is used for that operation. The value used can be either a simple scalar which
is compared using the 'eq' operator, or can be a reference to a regex (ex: qr/somestring/). This makes
it a powerful interface to act upon the ftp service which uses a certain ftp application.
.SS "is_disabled"
.IX Subsection "is_disabled"
Method returns 1 if the specified entry is disabled, 0 if the specified entry is not disabled (ie: enabled)
and undef if the specified entry cannot be found.
.SS "enable"
.IX Subsection "enable"
Method enables a service specified by the search criteria. Returns 1 on success, undef if the specified
entry cannot be found. If the entry was already enabled, nothing is done and 1 is returned. Inetd is
restarted after this call.
.SS "disable"
.IX Subsection "disable"
Method disables a service specified by the search criteria. Returns 1 on success, undef if the specified
entry cannot be found. If the entry was already disabled, nothing is done and 1 is returned. Inetd is
restarted after this call.
.SS "searchorder"
.IX Subsection "searchorder"
Method used to get/set the search order used for the \fIis_disabled\fR, \fIdisable\fR, \fIis_enabled\fR and \fIenabled\fR
methods. Method accepts optional argument 'bottomup' or 'topdown' defining the search order through the inetd.conf file.
The first entry matched in a search is used, so this is why the search order is important. Method returns
the current searchorder string.
.SS "\s-1EXPORT\s0 None by default."
.IX Subsection "EXPORT None by default."
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tie::File, \fIinetd\fR\|(8), \fIinetd.conf\fR\|(5)
.SH "AUTHOR"
.IX Header "AUTHOR"
James Russo
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006 by \s-1MYNAMESERVER\s0, \s-1LLC\s0
.PP
No part of this module may be duplicated in any form without written
consent of the copyright holder.
