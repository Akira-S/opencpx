use Test::More tests => 11;
BEGIN { use_ok('VSAP::Server::Modules::vsap::config') };

#########################

## NOTE: the side effects of this test file include changing the mtime
## NOTE: on /etc/passwd

my $user = "joefoo";
use VSAP::Server::Test::Account;

$VSAP::Server::Modules::vsap::config::CONFIG     = "cpx.conf.$$";
$VSAP::Server::Modules::vsap::config::HTTPD_CONF = "httpd.conf.$$";
system('cp', '-p', '/www/conf/httpd.conf', $VSAP::Server::Modules::vsap::config::HTTPD_CONF);

my $acctjoefoo = VSAP::Server::Test::Account->create( { username => 'joefoo', fullname => 'Joe Foo', password => 'joefoobar', services => 'ftp,mail' });

ok( getpwnam($user), "user exists");

## write an old config file
my $CONFIG_FILE =<<_CONF_;
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE cpx_config SYSTEM "cpx_config.dtd">
<config>
  <meta>
    <version>1.04</version>
    <warning>Do not edit this file directly</warning>
    <rootbeer>Jones Soda Company</rootbeer>
    <pepper_sauce>Tabasco, McIlhenny Co., Avery Island, La.</pepper_sauce>
    <indian_proverb>Call on God, but row away from the rocks.</indian_proverb>
    <potshot>Micros~1: For when quality, reliability, and security just aren't that important!</potshot>
  </meta>
  <domains>
    <domain>
      <name>horace.com</name>
      <admin>horace</admin>
    </domain>
    <domain>
      <name>farley.com</name>
      <admin>farley</admin>
      <user_limit>0</user_limit>
      <alias_limit>5</alias_limit>
    </domain>
  </domains>
  <users>
    <user name="thursday">
      <domain>thursday.securesites.net</domain>
      <domain_admin/>
      <capabilities>
        <ftp/>
        <shell/>
        <mail/>
      </capabilities>
      <services>
        <ftp/>
        <shell/>
        <mail/>
      </services>
      <fullname>Administrative User</fullname>
      <eu_capabilities/>
    </user>
    <user name="horace">
      <domain>thursday.securesites.net</domain>
      <domain_admin/>
      <capabilities>
        <ftp/>
        <mail/>
      </capabilities>
      <services>
        <ftp/>
        <mail/>
      </services>
      <fullname>Horace Horse</fullname>
      <eu_capabilities/>
    </user>
    <user name="farley">
      <domain>thursday.securesites.net</domain>
      <domain_admin/>
      <capabilities>
        <ftp/>
        <mail/>
        <webmail/>
      </capabilities>
      <services>
        <ftp/>
        <mail/>
        <webmail/>
      </services>
      <fullname>Farley Barley</fullname>
      <eu_capabilities/>
    </user>
    <user name="$user">
      <domain>farley.com</domain>
      <capabilities>
        <mail/>
        <spamassassin/>
        <webmail/>
        <clamav/>
      </capabilities>
      <services>
        <mail/>
        <webmail/>
        <clamav/>
      </services>
      <fullname>Joe Foo</fullname>
    </user>
  </users>
</config>
_CONF_

open CONF, ">$VSAP::Server::Modules::vsap::config::CONFIG"
  or die "Could not write conf file: $!\n";
print CONF $CONFIG_FILE;
close CONF;

## get timestamps of files
my %o_time = ( apache_conf => (lstat($VSAP::Server::Modules::vsap::config::HTTPD_CONF))[9],
	       etc_passwd  => (lstat('/etc/passwd'))[9], );

my $co = new VSAP::Server::Modules::vsap::config( username => $user );

## version updated
is( $co->{dom}->findvalue('/config/meta/version') => 1.16, "the version is updated.");

## get cache values
my $ap_conf = $co->{dom}->findvalue('/config/meta/cache/apache_conf');
my $etc_pwd = $co->{dom}->findvalue('/config/meta/cache/etc_passwd');
is( $ap_conf, $o_time{apache_conf}, "orig value for apache_conf" );
is( $etc_pwd, $o_time{etc_passwd}, "orig value for etc_passwd" );

## touch files
select undef, undef, undef, 1.2;
system('touch', $VSAP::Server::Modules::vsap::config::HTTPD_CONF, '/etc/passwd');
cmp_ok( $ap_conf, "<", (lstat($VSAP::Server::Modules::vsap::config::HTTPD_CONF))[9], "apache_conf cache is old" );
cmp_ok( $etc_pwd, "<", (lstat('/etc/passwd'))[9], "etc_passwd cache is old" );

$co->platform_refresh();

## check for cache update
$ap_conf = $co->{dom}->findvalue('/config/meta/cache/apache_conf');
$etc_pwd = $co->{dom}->findvalue('/config/meta/cache/etc_passwd');
is( $ap_conf, (lstat($VSAP::Server::Modules::vsap::config::HTTPD_CONF))[9], "apache conf cache is up to date" );
is( $etc_pwd, (lstat('/etc/passwd'))[9], "passwd cache is up to date" );

## make sure the cache was written out
undef $co; undef $ap_conf; undef $etc_pwd;
$co = new VSAP::Server::Modules::vsap::config( username => $user );
$ap_conf = $co->{dom}->findvalue('/config/meta/cache/apache_conf');
$etc_pwd = $co->{dom}->findvalue('/config/meta/cache/etc_passwd');

is( $ap_conf, (lstat($VSAP::Server::Modules::vsap::config::HTTPD_CONF))[9], "apache conf cache is up to date" );
is( $etc_pwd, (lstat('/etc/passwd'))[9], "passwd cache is up to date" );


END {
    unlink $VSAP::Server::Modules::vsap::config::CONFIG;
    unlink $VSAP::Server::Modules::vsap::config::HTTPD_CONF;
}
