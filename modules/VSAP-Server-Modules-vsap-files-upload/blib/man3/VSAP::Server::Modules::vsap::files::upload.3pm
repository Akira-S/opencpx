.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VSAP::Server::Modules::vsap::files::upload 3"
.TH VSAP::Server::Modules::vsap::files::upload 3 "2014-06-27" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VSAP::Server::Modules::vsap::files::upload \- VSAP module to "upload"
one or more files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use VSAP::Server::Modules::vsap::files::upload;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1VSAP\s0 upload module allows users to \*(L"upload\*(R" one or more files.  The
name \*(L"upload\*(R" is something of a misnomer since this module does nothing
more than move a file placed in the user's \s-1VSAP\s0 temporary directory
(vsap\->{tmpdir}) into a session file during an \*(L"add\*(R" request, and move 
those session files to their final destination during a \*(L"confirm\*(R"
request.
.SS "files:upload:add"
.IX Subsection "files:upload:add"
The add method takes a file that was uploaded and placed in the users'
\&\s-1VSAP\s0 temporary directory (vsap\->{tmpdir}) and moves it into a new or an 
existing session directory.
.PP
The following template represents the generic form of an add query:
.PP
.Vb 4
\&    <vsap type="files:upload:add">
\&        <sessionid>session id</sessionid>
\&        <filename>file name</filename>
\&    </vsap>
.Ve
.PP
The '<sessionid>' is optional and only needs to be included if starting
a new session.  The '<filename>' specifies the file name of the file
that was recently uploaded (by an external process, such as an apache
modules, etc).  This file is presumed to exist in the authenticated
users' \s-1VSAP\s0 temporary directory (vsap\->{tmpdir}).
.SS "files:upload:cancel"
.IX Subsection "files:upload:cancel"
The cancel method will remove the session directory and any files that
may exist as part of the session.
.PP
The following template represents the generic form of a cancel query:
.PP
.Vb 3
\&    <vsap type="files:upload:cancel">
\&        <sessionid>session id</sessionid>
\&    </vsap>
.Ve
.PP
The '<sessionid>' is required.
.SS "files:upload:confirm"
.IX Subsection "files:upload:confirm"
The confirm method will move all of the files found in the session
directory into a specified target directory.
.PP
The following template represents the generic form of a confirm query:
.PP
.Vb 5
\&    <vsap type="files:upload:confirm">
\&        <sessionid>session id</sessionid>
\&        <target>target directory</target>
\&        <target_user>target directory</target_user>
\&    </vsap>
.Ve
.PP
The '<sessionid>' is required.
.PP
The target directory is the directory where the files will be moved.
System Administrators should use the full path name to the target
directory and need not ever include the optional target user name.
Domain Administrators should use the \*(L"virtual path name\*(R" for the target
directory and the '<target_user>' node if required (per the same
methodology of the source directory specification).  End Users will also
need to use a \*(L"virtual path name\*(R" to a file; no '<target_user>'
specification is required, as the authenticated user name is presumed.
.PP
If the target directory is accessible (see \s-1NOTES\s0), all of the files (or
the specified files) in the archive will be extracted or an error will
be returned.  A successful request will be indicated by the return
\&'<status>' node.
.SS "files:upload:delete"
.IX Subsection "files:upload:delete"
The delete method will delete specified files from the session
directory.
.PP
The following template represents the generic form of a delete query:
.PP
.Vb 7
\&    <vsap type="files:upload:delete">
\&        <sessionid>session id</sessionid>
\&        <filename>file name</filename>
\&        <filename>file name</filename>
\&        <filename>file name</filename>
\&        <filename>file name</filename>
\&    </vsap>
.Ve
.PP
The '<sessionid>' is required.  At least one '<filename>' is required.
.SS "files:upload:init"
.IX Subsection "files:upload:init"
The init method will build a unique session id for the upload session.
There are no rquired child nodes for an init query.  A typical response
from an init query will look something like this:
.PP
.Vb 3
\&    <vsap type="files:upload:init">
\&        <sessionid>session id</sessionid> 
\&    </vsap>
.Ve
.SS "files:upload:list"
.IX Subsection "files:upload:list"
The list method will return a list of files in a specified session
directory.  The information on each file includes the file name and the
file size.
.PP
The following template represents the generic form of a list query:
.PP
.Vb 3
\&    <vsap type="files:upload:list">
\&        <sessionid>session id</sessionid>
\&    </vsap>
.Ve
.PP
The '<sessionid>' is required.
.PP
If the session id is valid, then a response will be built that includes
the file name and file size of each file in the session directory.  The
following example generically represents the structure of a typical
response from a query:
.PP
.Vb 10
\&    <vsap type="files:upload:list">
\&        <sessionid>session id</sessionid>
\&        <upload>
\&          <name>file name</name>
\&          <size>file size</size>
\&        </upload>
\&        <upload>
\&          <filename>file name</filename>
\&          <size>file size</size>
\&        </upload>
\&        .
\&        .
\&        .
\&    </vsap>
.Ve
.SS "files:upload:status"
.IX Subsection "files:upload:status"
The status method will report information about the active upload in
progress for the specified session.  The following template represents
the generic form of a list query:
.PP
.Vb 3
\&    <vsap type="files:upload:list">
\&        <sessionid>session id</sessionid>
\&    </vsap>
.Ve
.PP
The '<sessionid>' is required.
.PP
If the session id is valid, then a response will be built that includes
information about how long the active file has been in transfer (in
seconds), the average transfer rate, the amount (in bytes) that has been
transferred, the total expected size (in bytes) of the transfer, as well
as the percentage of the transfer that has been completed.  The 
following example generically represents the structure of a typical
response from a status query:
.PP
.Vb 9
\&    <vsap type="files:upload:status">
\&        <sessionid>session id</sessionid>
\&        <filename>file name</filename>
\&        <time_elapsed>time in seconds</time_elapsed>
\&        <bytes_transferred>number of bytes</bytes_transferred>
\&        <average_transfer_rate>bytes per second</average_transfer_rate>
\&        <total_size>total number of bytes</total_size>
\&        <percent_complete>total number of bytes</percent_complete>
\&    </vsap>
.Ve
.SH "NOTES"
.IX Header "NOTES"
File Accessibility.  System Administrators are allowed full access to  
the file system, therefore the validity of the path name is only  
determined whether it exists or not.  However, End Users are restricted
access (or 'jailed') to their own home directory tree.  Domain
Administrators are likewise restricted, but to the home directory trees
of themselves and their end users.  Any attempts to get information
about or modify properties of files that are located outside of these   
valid directories will be denied and an error will be returned.
.SH "AUTHOR"
.IX Header "AUTHOR"
Rus Berrett, <rus@surfutah.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006 by \s-1MYNAMESERVER\s0, \s-1LLC\s0
.PP
No part of this module may be duplicated in any form without written
consent of the copyright holder.
