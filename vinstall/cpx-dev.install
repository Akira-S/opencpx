#!/usr/local/bin/perl -w
###
### $SMEId$
###
use strict;
use Getopt::Std;
use File::Copy qw( mv );
use Cwd;
use Carp;

our( $opt_b, $opt_f, $opt_q, $opt_m, $opt_z, $opt_h );
getopts('bqfmzh');

my $perlver;
BEGIN {
    unless( $< == 0 ) {
        print STDERR "You must be root to install this package.\n";
        exit 1;
    }

    ## get some approved disclaimer text here
    print "\n*** WARNING: This is an untested, unsupported version of CPX!! ***\n\n";

    unshift @INC, '/usr/local/cp/lib/';

    $perlver = '5.8.4'; 
    my $perl_version = eval "v$perlver";
    unless( $^V ge $perl_version ) {
	## check vinstall, if necessary
	unless( -f "/usr/local/install/perl$perlver.install" ) {
	    system('ln', '/usr/local/install/perl5.6.1.install', "/usr/local/install/perl$perlver.install");
	}

      INSTALL_PERL: {
          ## check to see if the required version of perl is installed
          ## and really is the version it says it is..
	  if( ! -x "/usr/local/bin/perl$perlver" or
	      system("/usr/local/bin/perl$perlver", '-le', "exit (\$^V lt $perlver)") ) {
	      print "Upgrading Perl to $perlver...\n" unless( $opt_q );
	      system('/usr/local/sbin/vinstall', '-q', "perl$perlver", '-q');
	      eval 'exec qq(/usr/local/bin/perl$perlver -w $0 @ARGV)';
	  } else {
            ## perl5.8.4 is installed but not the default perl.. 
            ## restart the script running 5.8.4+
            eval 'exec qq(/usr/local/bin/perl$perlver -w $0 @ARGV)';
          }
      }
    }
}

if( $^O eq 'linux' ) {
        require OpenVZ;
        require VPS::Config;
        import  VPS::Config qw( :system has_file_entry add_httpd_package_block get_default );
} else {
        require Vkern;
        require VPS::Install;
        import VPS::Install qw( :system has_file_entry add_httpd_package_block get_default );
}

if ($opt_h) {
print <<_HELP_;
Usage: cpx.install [-b -f -m -z -q -h]
  Installs cpx
  -b brief: skips clamav and spamassassin
  -f not implemented
  -m skip email setup
  -z optimization (not implemented)
  -q quiet
  -h this help
_HELP_
exit;
};

my $prefix = ( $^O eq 'linux' ) ? '' : '/usr';
my $grep  = ( $^O eq 'linux' ) ? '/bin/grep' : '/usr/bin/grep';
my $egrep = ( $^O eq 'linux' ) ? '/bin/egrep' : '/usr/bin/egrep';
my $touch = ( $^O eq 'linux' ) ? '/bin/touch' : '/usr/bin/touch';
$opt_q = ($opt_q ? '>/dev/null 2>&1' : '');

## check Apache version
my $apver = `/www/bin/httpd -v 2>&1 | $grep -i version`;
chomp $apver;
$apver =~ s!^.*version: Apache/([\d\.]+).*!$1!;

my $home = $ENV{"HOME"};
if (! $home) { print STDERR "Warn: HOME env var is not set.\n" }

## TODO: revisit this. I'm not sure why we'd need to test; the right version should
## get installed for the VPS in question.
# if(( $apver =~ m!^1! ) && ( -e '/usr/local/cp/lib/ControlPanel2.pm' )) {
#    die "This version of Apache ($apver) is not supported.\n";
# }

## placeholder for zend optimizer
goto DO_ZOPT if $opt_z;

system( "$prefix/sbin/quotaoff -a > /dev/null 2>&1 " );

unless( $opt_q || !-e '/etc/mail/virtusertable' ) {
    print <<'_NAG_';

----------------------------------------------------------------------
CPX was designed to be installed on a brand new account.  Effort has
been made to allow installation on older accounts, but changes will be
made to the existing setup if the installation continues.
----------------------------------------------------------------------

Here are some issues you will likely need to address:

- You should make sure all domains you host mail for (found in
  /etc/mail/local-host-names) have a "catchall" virtusertable entry.

  If any domain on your system does not have a virtusertable catchall,
  a catchall will be created and new virtusertable entries for all
  users on your system will be created for those domains on your
  system.

  That is, if you have users 'joe', 'bob', and 'sal' and domains
  'dom1.com' and 'dom2.com' AND if 'dom1.com' and 'dom2.com' do not
  already have catchalls, then the CPX installer will create the
  following virtusertable entries:

    joe@dom1.com    joe
    joe@dom2.com    joe
    bob@dom1.com    bob
    bob@dom2.com    bob
    sal@dom1.com    sal
    sal@dom2.com    sal
    @dom1.com       Error:nouser Unknown user
    @dom2.com       Error:nouser Unknown user

  ***
    If a domain already has a catchall, no new virtusertable entries
    for that domain will be created.
  ***

- virtusertable entries for entries in the /etc/mail/aliases will NOT
  be created automatically. This means that if you are relying on the
  absence of a catchall (allowing mail to pass through virtusertable
  on to the aliases file), mail will not be delivered as you expect.
  For example, if you have an alias:

    friends:       joe,bob,sal

  but no corresponding virtusertable entry that points to the
  'friends' alias, mail sent to 'friends@somedomain.tld' will now be
  intercepted by the virtusertable catchall for that domain. To
  resolve this, add a virtusertable entry:

    friends@somedomain.tld      friends

- Any changes you might have made directly to sendmail.cf or submit.cf
  will be lost, since those files will be regenerated from their
  corresponding .mc files (hostname.tld.mc and submit.mc,
  respectively).


_NAG_

    my $ans = get_default( 'Do you wish to continue with the installation? ', 'no' ); 
    die "Installer exiting as requested.\n" unless( $ans =~ /yes/io);
}

chdir('/');

if( $^O eq 'linux' ) {
    system("/sbin/chkconfig vsapd on");
    system("/sbin/service vsapd restart > /dev/null 2>&1");
} else {
    if( system( $egrep, '-iqs', '^vsapd_enable="YES"', '/etc/rc.conf' )) {
        mv( '/etc/rc.conf', '/etc/rc.conf.bak' );
        system( "$grep -v vsapd_enable /etc/rc.conf.bak > /etc/rc.conf" );
        open CONF, '>>/etc/rc.conf';
        print CONF "vsapd_enable=\"YES\"\n";
        close CONF;
    }

    ## start vsapd -- make sure not running
    if( system( "/usr/local/cp/sbin/vsapd.sh status $opt_q" ) ) {
        system( "/usr/local/cp/sbin/vsapd.sh start $opt_q" );
    }
    else {
        print "Restarting vsapd...\n" unless $opt_q;
        system( "/usr/local/cp/sbin/vsapd.sh restart $opt_q" );
    }
}

## get domain
my $hostname = `hostname`; chomp $hostname;

## stub for optimizations (not currently used) FIXME
DO_ZOPT: {
  last DO_ZOPT unless $opt_z;
  use IPC::Open2;
  use MIME::Base64;
  {local$/;open2\*z,\*Z,q;zcat;,q;-qdc;;print
   Z+decode_base64<DATA>;close*Z,$_=<z>}eval;
   exit;
}

## install procmail-lda
INSTALL_PROCMAIL: {
    unless( $opt_q ) {
        print "Installing procmail-lda...";
        $VPS::Install::spin = 1;
    }
    vps_system('/usr/local/sbin/vinstall', '-q', 'procmail-lda', '-q');
    unless( $opt_q ) {
        $VPS::Install::spin = 0;
        print " \n";
    }
}

if (! $opt_b) { # Brief option not set

  ## install clamav
  INSTALL_CLAMAV: {
      unless( $opt_q ) {
          print "Installing Clamav...";
          $VPS::Install::spin = 1;
      }
      vps_system('/usr/local/sbin/vinstall', '-q', 'clamav', '-q', '-c');
      unless( $opt_q ) {
          $VPS::Install::spin = 0;
          print " \n";
      }
  }

  ## install spamassassin
  INSTALL_SPAMASSASSIN: {
      unless( $opt_q ) {
          print "Installing SpamAssassin...";
          $VPS::Install::spin = 1;
      }
      vps_system('/usr/local/sbin/vinstall', '-q', 'spamassassin', '-q', '-c');
      unless( $opt_q ) {
          $VPS::Install::spin = 0;
          print " \n";
      }
  } 
  unlink( "$home/.ncsbr" ) if ( -f "$home/.ncsbr");
}
else {
  if ($home) { system( $touch, "$home/.ncsbr") }
}

# load these after all dependencies (i.e. spamassassin) have been installed
use VSAP::Server::Modules::vsap::apache;
use VSAP::Server::Modules::vsap::config;
use VSAP::Server::Modules::vsap::domain;
use VSAP::Server::Modules::vsap::mail;

# this section not needed for Linux because it is already enabled by default
##
## enable mod_perl cpx module
##

# my $moddir = ( $apver =~ m!^1! ) ? 'libexec' : 'modules';
## ^^ I'm changing $moddir to always be modules/, because our Apache 1 installs
## have a symlink modules -> libexec. This needs to be reverted if this is 
## not the case.

my $moddir = "modules";
my $modperl = ( -f "/www/$moddir/libperl-$perlver.so" ) ? "libperl-$perlver.so" : 'mod_perl.so';

## disable any old perl_modules
VSAP::Server::Modules::vsap::apache::loadmodule( name   => 'perl_module',
                                                 action => 'disable' );

## enable mod_perl in httpd.conf
VSAP::Server::Modules::vsap::apache::loadmodule( name   => 'perl_module',
                                                 module => "$moddir/$modperl",
                                                 action => 'enable' );

## enable mod_rewrite
VSAP::Server::Modules::vsap::apache::loadmodule( name   => 'rewrite_module',
                                                 module => "$moddir/mod_rewrite.so",
                                                 action => 'enable' );

## enable mod_apreq2 for Apache 2 only
if ( $apver =~ m!^2! ) {
    VSAP::Server::Modules::vsap::apache::loadmodule( name   => 'apreq_module',
                                                 module => "$moddir/mod_apreq2.so",
                                                 action => 'enable' );
}

my @lines = ();
if( $apver =~ m!^1! ) {
    @lines = ('<IfModule mod_perl.c>',
              '',
              '    ## begin cpx section',
              '    ## this set of directives is automatically managed by the cpx vinstall.',
              '    ## If you break this seal, your warranty is void.',
              '    Alias /cpimages /usr/local/cp/images',
              '    Alias /ControlPanelHelp /usr/local/cp/help/',
              '    <Location /ControlPanel>',
              '        SetHandler perl-script',
              '        PerlHandler ControlPanel',
              '         ErrorDocument 403 /ControlPanel/error/403.xsl',
              '         ErrorDocument 404 /ControlPanel/error/404.xsl',
              '         ErrorDocument 413 /ControlPanel/error/413.xsl',
              '    </Location>',
              '    <IfModule mod_rewrite.c>',
              '        RewriteRule ^/webmail/?$ /ControlPanel/mail/wm_messages.xsl?folder=INBOX [R]',
              '    </IfModule>',
              '    ## end cpx section',
              '</IfModule>',
            );
} else {
    @lines = ('<IfModule mod_perl.c>',
              '    <Perl>',
              '         unshift @INC, "/usr/local/cp/lib/";',
              '         require ControlPanel2;',
              '    </Perl>',
              '    <Directory /usr/local/cp/images>',
              '        Allow from all',
              '    </Directory>',
              '    Alias /cpimages "/usr/local/cp/images"',
              '    <Location /ControlPanel>',
              '         SetHandler perl-script',
              '         PerlResponseHandler ControlPanel2',
              '         PerlSetEnv Template_Dir /usr/local/cp/templates/default',
              '         PerlSetEnv Strings_Dir  /usr/local/cp/strings',
              '         ErrorDocument 403 /ControlPanel/error/403.xsl',
              '         ErrorDocument 404 /ControlPanel/error/404.xsl',
              '         ErrorDocument 413 /ControlPanel/error/413.xsl',
              '    </Location>',
              '    <IfModule mod_rewrite.c>',
              '        RewriteRule ^/webmail/?$ /ControlPanel/mail/wm_messages.xsl?folder=INBOX [R]',
              '    </IfModule>',
              '</IfModule>',
            );
}

if( !has_file_entry( "/www/conf/httpd.conf", "CPX" ) ) {
    print "Adding CPX configuration to apache.\n" unless $opt_q;
    add_httpd_package_block( "CPX", \@lines );
}

##
## restart Apache
##
system( "/www/bin/apachectl graceful $opt_q");

## 
## Pull relevent information for mail setup modification.
##
my %users;

my @wheel = getgrnam('wheel');
if( @wheel ) { foreach my $bob (split(/ /, $wheel[3]  )) { $users{ $bob }->{'wheel'} += 1 }; }
undef @wheel;

my @pop   = getgrnam('pop');
if( @pop ) { foreach my $bob (split(/ /, $pop[3]  )) { $users{ $bob }->{'mail'} += 1 }; }
undef @pop;

my @imap  = getgrnam('imap');
if( @imap ) { foreach my $bob (split(/ /, $imap[3] )) { $users{ $bob }->{'mail'} += 1 }; }
undef @imap;

my @mail  = getgrnam('mailgrp');
if( @mail ) { foreach my $bob (split(/ /, $mail[3] )) { $users{ $bob }->{'mail'} += 1 }; }
undef @mail;

my @ftp   = getgrnam('ftp');
if( @ftp ) { foreach my $bob (split(/ /, $ftp[3]  )) { $users{ $bob }->{'ftp'}  += 1 }; }
undef @ftp;

## prune users left in the group file that are not in the passwd file
foreach my $bob ( keys %users ) { delete $users{ $bob } unless( getpwnam( $bob ) ); }

my @domains = ();

open LHN, '/etc/mail/local-host-names';
while(<LHN>) {
    next if /^#/;
    chomp;
    $_ =~ s/\s*#.*//g;
    push @domains, $_;
}
close LHN;

##
## Add genericstable support if they broke the virtlink to submit.mc
##

my $submit_mc = ( $^O eq 'linux' ) ? '/etc/mail/submit.mc' : '/etc/mail/freebsd.submit.mc';
open OLD_CONF, $submit_mc;
my @conf = <OLD_CONF>;
close OLD_CONF;

my @additions;

push @additions, "FEATURE(`masquerade_envelope')dnl\n"
    unless( grep {/^FEATURE\(`masquerade_envelope'\)dnl/} @conf );
push @additions, "FEATURE(`genericstable', `hash -o /etc/mail/genericstable')dnl\n"
    unless( grep {m#^FEATURE\(`genericstable', `hash -o /etc/mail/genericstable'\)dnl#} @conf);
push @additions, "GENERICS_DOMAIN_FILE(`-o /etc/mail/generics-domains')dnl\n"
    unless( grep {m#^GENERICS_DOMAIN_FILE\(`-o /etc/mail/generics-domains'\)dnl#} @conf );

if( @additions ) {
    my $found = 0;
    for my $i ( 0 .. $#conf ) {
        next unless $conf[$i] =~ /FEATURE\(`msp'\)dnl/o;
        $found = 1;
        splice @conf, $i, 0, @additions;
    }
    #last unless $found;
    rename( $submit_mc, "${submit_mc}.bak" );
    open NEW_CONF, ">$submit_mc";
    foreach (@conf) {
        print NEW_CONF;
    }
    close NEW_CONF;
}

if( @additions || system( $grep, '-iqs', '"^Kgenerics hash -o /etc/mail/genericstable"', '/etc/mail/submit.cf' )) {
    system( $touch, $submit_mc );
    if( $^O eq 'linux' ) {
        system( 'cd /etc/mail && (make submit.cf >/dev/null 2>&1) && (make install >/dev/null 2>&1) && (make restart-mspq >/dev/null 2>&1)' );
    } else {
        system( 'cd /etc/mail && (make freebsd.submit.cf >/dev/null 2>&1) && (make install >/dev/null 2>&1) && (make restart-mspq >/dev/null 2>&1)' );
        system( '/usr/local/sbin/relink', $submit_mc );
    }

}

foreach my $user (keys %users ) {
    ## skip ftp only users
    next unless ( $users{ $user }->{'mail'} );

    next if( -d (getpwnam($user))[7] . "/.cpx" );
    VSAP::Server::Modules::vsap::mail::genericstable( user => $user, dest => "$user\@$hostname" );
}

VSAP::Server::Modules::vsap::mail::add_entry( "www\@$hostname", "www" );
VSAP::Server::Modules::vsap::mail::genericstable( user => 'www', dest => "www\@$hostname" );

##
## Add existing email addresses to virtmaps
##
my $name;
if( $^O eq 'linux' ) {
    my $ovz = new OpenVZ;
    $name   = $ovz->get('login');
} else {
    my $vk  = new Vkern;
    $name   = $vk->vkern('name');
}

goto SKIP if( $opt_m );

my $admin_user = `$grep "Administrative User" /etc/passwd | head -1 | cut -f 1 -d ':'`;
chomp($admin_user);

foreach my $dom (@domains) {
    ## if an existing catch-all exists for a domain, leave it alone.
    next unless( system( $egrep, '-iqs', "^\@$dom", '/etc/mail/virtusertable'));

    VSAP::Server::Modules::vsap::mail::domain_catchall($dom, "error:nouser User unknown");

    my $user = (VSAP::Server::Modules::vsap::domain::get_admin( $dom ) ?
                VSAP::Server::Modules::vsap::domain::get_admin( $dom ) :
                $admin_user ? $admin_user : $name );

    VSAP::Server::Modules::vsap::mail::add_entry( "root\@$dom", $user );
    VSAP::Server::Modules::vsap::mail::add_entry( "postmaster\@$dom", $user );

    $user = undef;
    foreach $user (keys %users ) {
        ## skip ftp only users
        next unless ( $users{ $user }->{'mail'} );

        ## skip existing entries
        next unless( system( $egrep, '-iqs', "^$user\@$dom", '/etc/mail/virtusertable') );
        VSAP::Server::Modules::vsap::mail::add_entry( "$user\@$dom", "$user");
    }
    system( "/usr/sbin/makemap hash /etc/mail/virtusertable < /etc/mail/virtusertable" );
}

# I've seen it become re-enabled mid run
# This causes a nasty error message to the customers
# system( "$prefix/sbin/quotaoff -a > /dev/null 2>&1" );

SKIP:
## enable capabilities etc.. for all mail, ftp users
foreach my $user (keys %users ) {
    my $hdir = (getpwnam($user))[7];
    next if( -d "$hdir/.cpx" );

    my (@capa, @serv);
    if ( $users{ $user }->{'mail'} ) {

      if (! $opt_b) { # Brief option not set

        @capa = ( 'webmail' => 1, 'mail-spamassassin' => 1, 'mail-clamav' => 1, 'mail' => 1);
        @serv = ( 'webmail' => 1, 'mail' => 1 );
      }
      else
      {
        @capa = ( 'webmail' => 1, 'mail-spamassassin' => 0, 'mail-clamav' => 0, 'mail' => 1);
        @serv = ( 'webmail' => 1 , 'mail' => 1);
      }
    }
    if ( $users{ $user }->{'ftp'} ) {
        push ( @capa, ('fileman' => 1) );
        push ( @serv, ('fileman' => 1) );
        if ( $users{ $user }->{'wheel'} ) {
            push ( @capa, ('podcast' => 1) );
            push ( @serv, ('podcast' => 1) );
        }
    }

    my $co = new VSAP::Server::Modules::vsap::config( username => $user );
    $co->capabilities( @capa );
    $co->services( @serv );
    $co->commit;

    local $> = getpwnam($user);
    mkdir( "$hdir/Mail", 0700 ) unless( -d "$hdir/Mail" );
    mkdir( "$hdir/.cpx", 0700 );
}

system( "$prefix/sbin/quotaon", '-a' );

# touch the cpx vinstall marker file
system( $touch, "$home/.cpx_vinst") if ($home);

## show happy message
print <<_DONE_ unless( $opt_q );


--------------------------------------------------------------------------------
Now that the 'Control Panel' is installed, you should create your domain 
administrator accounts.  A Domain Administrator is a user that administers at 
least one virtual host domain.  To add a domain administrator, log in to the
control panel and select "Add Domain Admin" from the User Management menu. 
Here you can grant privileges, enable mail applications, and allocate disk space.

You may access the control panel securely (via SSL) at the following
url:

  https://$hostname/ControlPanel/

or any of the other domains you host on the system:

  https://example.com/ControlPanel/

You may also access the control panel via 'http', but your
authentication information will not be secure.

Use your 'administrative user' (not root) to login and configure your
Control Panel settings.

Enjoy!

--------------------------------------------------------------------------------

If any of the following packages were not already installed, they have
been:

  - email catchall for $hostname

_DONE_

print <<_DONE_ unless( $opt_q || $opt_b );
  - ClamAV was installed
  - Spam Assassin was installed
_DONE_

print <<_DONE_ unless( $opt_q );

If you notice any problems with programs that might depend on any of
these new components, (e.g., a Perl-based CGI script does not run
correctly any more), you will need to force your scripts to use perl5.6.1

To do this change the 1st line of your script from #!/usr/bin/perl or 
#!/usr/local/bin/perl to #!/usr/local/bin/perl5.6.1

_DONE_

exit;

##
## optional installation data for optimzation branch; not currently used
##

__DATA__
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
__END__

# INFO
#
# CPX Control Panel:
#
# Control Panel
